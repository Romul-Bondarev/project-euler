#!/usr/bin/env python

'''

'''

def problem_1(*args, **kwargs):
    '''
    If we list all the natural numbers below 10 that are multiples of 3 or 5,
    we get 3, 5, 6 and 9. The sum of these multiples is 23.

    Find the sum of all the multiples of 3 or 5 below 1000.
    '''

    count = 0

    for i, k in zip(range(3, 1000//3), range(5, 1000//5)):
        count += i + k

    return count

def problem_2(*args, **kwargs):
    '''
    Each new term in the Fibonacci sequence is generated by adding the
    previous two terms. By starting with 1 and 2, the first 10 terms will be:
    1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
    By considering the terms in the Fibonacci sequence whose values do not
    exceed four million, find the sum of the even-valued terms.
    '''

    fib_0, fib_1 = 1, 1
    count = 0

    while fib_1 < 4000000:
        if fib_0 % 2 == 0:
            count += fib_0
        if fib_1 % 2 == 0:
            count += fib_1
        fib_0, fib_1 = fib_1, fib_0 + fib_1

    return count

def problem_3(*args, **kwargs):
    '''
    The prime factors of 13195 are 5, 7, 13 and 29.
    What is the largest prime factor of the number 600851475143 ?
    '''

    Ans = []
    d = 2
    n = 600851475143

    while d * d <= n:
        if n % d == 0:
            Ans.append(d)
            n //= d
        else:
            d += 1

    if n > 1:
        Ans.append(n)

    return max(Ans)

def problem_4(*args, **kwargs):
    '''
    A palindromic number reads the same both ways. The largest palindrome
    made from the product of two 2-digit numbers is 9009 = 91 Ã— 99.
    Find the largest palindrome made from the product of two 3-digit numbers.
    '''
    for i in reversed(range(100, 1000)):
        num = int(str(i) + str(i)[::-1])
        for j in reversed(range(100, 1000)):
            if num % j == 0:
                for k in reversed(range(100, j)):
                    if (num/j) // k == 1 and (num/j) % k == 0:
                        return num

if __name__ == '__main__':
    anwser = problem_4()
    print(anwser)
